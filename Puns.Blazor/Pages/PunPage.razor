@page "/puns"
@using System.Linq

<div class="themeBox">
<br/>
<label>Theme</label>
<input type="text" style="width: 100%" @bind="State.Theme"/>
<br/>
</div>


@foreach (var synSet in State.SynSets)
{

    var changeFunc = new Action<ChangeEventArgs>((e) =>
    {
        if (!State.CrossedOffSynsets.Add(synSet))
            State.CrossedOffSynsets.Remove(synSet);
    });

    <div class="synsetBox">
    <input type="checkbox" checked="@(!State.CrossedOffSynsets.Contains(synSet))" @onchange="changeFunc" />
    <label>@synSet.Gloss</label>
    <br />
    </div>

}
<br />

<div class="categoryBox">
<label>Category</label>
<select @bind="State.PunCategory">
    @foreach (var c in Enum.GetValues<PunCategory>())
    {
        <option value="@c">@c</option>
    }
</select>

</div>

<br/>

<div class="GenerateButton">
    <button disabled="@State.IsGenerating" class="btn btn-primary" @onclick="State.Find">
    @(State.IsGenerating? "Pundering" :("Pun!") )
    </button>
</div>

<br/>
<br/>
<hr/>

@if(State.PunList != null)
{
    @foreach (var grouping in State.PunList)
{

        var collapsed = !State.RevealedWords.Contains(grouping.Key);

        Action toggle = () =>
        {
            if (!State.RevealedWords.Add(grouping.Key))
                State.RevealedWords.Remove(grouping.Key);
        };

    <div class="punHeader">
        <h1>
        @grouping.Key (@grouping.Count())
        <button @onclick="toggle">@(collapsed?"+":"-")</button>
    </h1>
    </div>



    <div hidden="@collapsed" class="punGroup">
        @foreach (var pun in grouping)
    {
        <br/>
        <label>@pun.NewPhrase</label>
        <label> (@pun.OldPhrase)</label>
        <br/>
    }

    </div>


}
}


@code {

    public PunState State { get; } = new PunState();

}
